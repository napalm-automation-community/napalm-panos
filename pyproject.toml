[tool.poetry]
name = "napalm_panos"
version = "0.6.2"
description = "Network Automation and Programmability Abstraction Layer with Multivendor support for PANOS."
authors = ["Gabriele Gerbino <gabriele@networktocode.com>"]
license = "Apache-2.0"
homepage = "https://github.com/napalm-automation/napalm-panos"
repository = "https://github.com/napalm-automation/napalm-panos"
documentation = "https://github.com/napalm-automation/napalm-panos"
readme = "README.md"
keywords = ["napalm", "panos", "napalm-panos"]
classifiers = [
    "Intended Audience :: Developers",
    "Development Status :: 4 - Beta",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
]
include = [
    "CHANGELOG.md",
    "LICENSE",
    "README.md",
    "napalm_panos/templates/*.j2",
]

[tool.poetry.dependencies]
python = ">=3.8,<3.12"
napalm = "^4.0.0"
lxml = "^5.0.0"
pan-python = "*"
netmiko = "^4.0.0"
requests-toolbelt = "*"
xmltodict = "*"


[tool.poetry.group.dev.dependencies]
bandit = "*"
coverage = "*"
invoke = "*"
flake8 = "*"
pylint = "*"
pytest = "*"
pyyaml = "*"
pydocstyle = "*"
m2r2 = "*"
sphinx = "*"
sphinx-rtd-theme = "*"
toml = "*"
yamllint = "*"
coveralls = "*"
pytest-cov = "*"
pytest-json = "*"
pytest-pythonpath = "*"
pylama = "*"
flake8-import-order = "*"
black = "*"


[tool.black]
line-length = 120
target-version = ['py38', 'py39', 'py310', 'py311']
include = '\.pyi?$'
exclude = '''
(
  /(
      \.eggs         # exclude a few common directories in the
    | \.git          # root of the project
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | buck-out
    | build
    | dist
  )/
  | settings.py     # This is where you define files that should not be stylized by black
                     # the root of the project
)
'''

[tool.pylint.basic]
# No docstrings required for private methods (Pylint default), or for test_ functions, or for inner Meta classes.
no-docstring-rgx="^(_|test_|Meta$)"
good-names="i,ip,j,k,ex,Run,_"

[tool.pylint.messages_control]
# Line length is enforced by Black, so pylint doesn't need to check it.
# Pylint and Black disagree about how to format multi-line arrays; Black wins.
disable = """,
    line-too-long,
    consider-iterating-dictionary,
    too-many-statements,
    """

[tool.pylint.miscellaneous]
# Don't flag TODO as a failure, let us commit with things that still need to be done in the code
notes = """,
    FIXME,
    XXX,
    """

[tool.pytest.ini_options]
pythonpaths = "./"
testpaths = "tests/"
addopts = "-vv --doctest-modules -p no:warnings --ignore-glob='*mock*'"

[build-system]
requires = ["poetry_core>=1.0.0"]
build-backend = "poetry.core.masonry.api"